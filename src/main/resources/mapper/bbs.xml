<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DAO 정보 -->
<mapper namespace="com.project.pincafe.bbs.BbsDAO">

<!-- resultMap = 얻어온 결과를 저장할 곳. 즉 VO 정보 -->
<resultMap type="com.project.pincafe.bbs.BbsTblVO" id="bbsMap">
    <result property="rowNum"   column="RN"/>
    <result property="userId"   column="USERID"/>
    <result property="seq"      column="SEQ"/>
    <result property="title"    column="TITLE"/>
    <result property="content"  column="CONTENT"/>
    <result property="divi"     column="DIVI"/>
    <result property="regdate"  column="REGDATE"/>
    <result property="fileCode" column="FILECODE"/>
    <result property="address"  column="ADDRESS"/>
    <result property="lat"      column="LAT"/>
    <result property="lng"      column="LNG"/>
</resultMap>

<select id="selectBbsRowCount" resultType="integer"> <!-- 결과가 하나이므로 Type -->
    SELECT COUNT(*) FROM BBS_TBL
</select>

<!-- <select id="selectBbsList" resultMap="bbsMap" useCache="false">
    SELECT * FROM (SELECT rownum RN, BBS_TBL.* FROM BBS_TBL ORDER BY regdate DESC)
    WHERE RN <![CDATA[>=]]> (#{page} * #{rowsPerPage}) + 1 AND
          RN <![CDATA[<=]]> (#{page} + 1) * #{rowsPerPage}
</select> -->

<!-- <select id="selectBbsList" resultMap="bbsMap" useCache="false">
    SELECT * FROM (SELECT rownum RN, BBS_TBL.* FROM BBS_TBL ORDER BY regdate DESC)
    WHERE RN <![CDATA[>=]]> (select max(rowNum) - ((#{page} + 1) * #{rowsPerPage}) + 1 FROM BBS_TBL) AND
          RN <![CDATA[<=]]> (select max(rowNum) - (#{page}* #{rowsPerPage}) FROM BBS_TBL)
</select> -->

<select id="selectBbsList" resultMap="bbsMap" useCache="false">
    SELECT * FROM (SELECT rownum RN, BBS_TBL.* FROM BBS_TBL ORDER BY regdate DESC)
    WHERE RN &gt;= (select max(rowNum) - ((#{page} + 1) * #{rowsPerPage}) + 1 FROM BBS_TBL) AND
          RN &lt;= (select max(rowNum) - (#{page}* #{rowsPerPage}) FROM BBS_TBL)
</select>

<!-- <select id="selectBbsList" resultMap="bbsMap" useCache="false">
    SELECT *
    FROM (
        SELECT rownum RN, TBL.*
        FROM (
            SELECT BBS_TBL.*
            FROM BBS_TBL
            ORDER BY regdate DESC
        ) TBL
    )
    WHERE RN &gt;= ((#{page} - 1) * #{rowsPerPage}) + 1
      AND RN &lt;= #{page} * #{rowsPerPage};
</select> -->

<select id="selectBbsContent" resultMap="bbsMap">
    SELECT * FROM BBS_TBL WHERE USERID=#{userId, jdbcType=VARCHAR} AND SEQ=#{seq, jdbcType=INTEGER}
</select>
 <!-- readContent와 updateContent의 경우에는 데이터 타입이나 데이터베이스 드라이버에 따라 
 동작이 달라질 수 있기 때문에, 가급적이면 jdbcType을 명시적으로 설정하는 것이 좋습니다. 
 이로 인해 코드가 더 안정적으로 동작하고 다양한 환경에서 일관된 결과를 얻을 수 있습니다 -->

<update id="updateBbsContent">
    UPDATE BBS_TBL SET TITLE=#{title, jdbcType=VARCHAR}, CONTENT=#{content, jdbcType=VARCHAR}
    WHERE USERID=#{userId, jdbcType=VARCHAR} AND SEQ=#{seq, jdbcType=INTEGER}
</update>

<!-- <insert id="insertBbsContent">
    INSERT INTO BBS_TBL (USERID, SEQ, TITLE, CONTENT, DIVI, REGDATE)
    VALUES (#{userId}, (SELECT MAX(SEQ)+1 FROM BBS_TBL WHERE USERID=#{userId}),
            #{title}, #{content}, #{divi}, sysdate)
</insert> -->

<!-- SEQ 속성에 NVL 함수를 사용하여 NULL이 뜨는 경우 0으로 치환 -->
<insert id="insertBbsContent">
    INSERT INTO BBS_TBL (USERID, SEQ, TITLE, CONTENT, DIVI, REGDATE, FILECODE, ADDRESS, LAT, LNG)
    VALUES (#{userId}, (SELECT NVL(MAX(SEQ), 0)+1 FROM BBS_TBL WHERE USERID=#{userId}),
        #{title}, #{content}, #{divi}, sysdate, #{fileCode, jdbcType=VARCHAR}, #{address}, #{lat}, #{lng})
<!-- jdbcType=VARCHAR를 붙여줌으로써 타입매핑을 명시적으로 설정해주고 사진 없이 글 올리는 기능을 허용시킴 -->
</insert>

<delete id="deleteBbsContent">
    DELETE FROM BBS_TBL
    WHERE userId = #{userId} AND SEQ=#{seq}
</delete>

</mapper>